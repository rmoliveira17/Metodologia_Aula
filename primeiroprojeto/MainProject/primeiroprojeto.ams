## ams_version=1.0

Model Main_primeiroprojeto {
	Procedure Proc_Limpavariaveis {
		Body: {
			
			empty Qtde_aguacomgas;
			empty Qtde_Aguasemgas;
			empty lucro;
		}
	}
	MathematicalProgram solve_plan {
		Objective: lucro;
		Direction: maximize;
		Constraints: AllConstraints;
		Variables: AllVariables;
		Type: Automatic;
	}
	Constraint time_constraint_Maquina {
		Definition: 1/2.2*Qtde_aguacomgas + 1/1.4*Qtde_Aguasemgas <=8;
	}
	Constraint Demanda_aguasemgas {
		Definition: Qtde_Aguasemgas <= 12;
	}
	Constraint Demanda_aguacomgas {
		Definition: Qtde_aguacomgas <= 10;
	}
	Parameter P_preco_aguasemgas {
		Definition: 14.50;
	}
	Parameter P_preco_aguacomgas {
		Definition: 9.75;
	}
	Variable Qtde_aguacomgas {
		Range: nonnegative;
	}
	Variable Qtde_Aguasemgas {
		Range: nonnegative;
	}
	Variable lucro {
		Text: "Lucro";
		Range: free;
		Definition: P_preco_aguacomgas*Qtde_aguacomgas+P_preco_aguasemgas*Qtde_Aguasemgas;
	}
	Procedure MainInitialization {
		Body: {
			solve solve_plan;
		}
		Comment: "Add initialization statements here that do NOT require any library being initialized already.";
	}
	Procedure PostMainInitialization {
		Comment: {
			"Add initialization statements here that require that the libraries are already initialized properly,
			or add statements that require the Data Management module to be initialized."
		}
	}
	Procedure MainExecution;
	Procedure PreMainTermination {
		Body: {
			return DataManagementExit();
		}
		Comment: {
			"Add termination statements here that require all libraries to be still alive.
			Return 1 if you allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence."
		}
	}
	Procedure MainTermination {
		Body: {
			return 1;
		}
		Comment: {
			"Add termination statements here that do not require all libraries to be still alive.
			Return 1 to allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence.
			It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
		}
	}
	Section Quantities_and_Units {
		Comment: {
			"This section contains all the units and quantities that are added automatically by AIMMS.
			It is recommended to declare all your quantities here."
		}
		Quantity SI_Time_Duration {
			BaseUnit: s;
			Conversions: minute->s : #-># * 60;
			Comment: {
				"Expresses the value for the duration of periods.
				
				The unit s has been added automatically because it is a required unit for AimmsWebUI.
				
				The unit minute has been added automatically because it is a required unit for AimmsWebUI."
			}
		}
	}
}
